#!/usr/bin/env python3

import os
import errno
import subprocess
import signal
import sys
import i3ipc
import threading

FIFO = '/tmp/statusbar_vpn'

fifo_lock = threading.RLock()

def handler(signum, frame):
  global fifo_lock
  with fifo_lock:
    if os.path.exists(FIFO): os.remove(FIFO)
    sys.exit(0)

def listen(a, b):
  i3 = i3ipc.Connection()
  i3.on('shutdown', handler)
  i3.main()

signal.signal(signal.SIGTERM, handler)
signal.signal(signal.SIGINT, handler)

notification_thread = threading.Thread(target=listen)
notification_thread.start()

with fifo_lock:
  if os.path.exists(FIFO): os.remove(FIFO)
  os.mkfifo(FIFO)
print("VPN: â†º", end='', flush=True)
print("VPN: {}".format(subprocess.run(['status-vpn'], capture_output=True).stdout.decode().rstrip()), end='', flush=True)
while True:
  with open(FIFO) as pipe: print("VPN: {}".format(pipe.read().rstrip()), end='', flush=True)
