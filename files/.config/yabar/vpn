#!/usr/bin/env python3

import os
import errno
import subprocess
import signal
import sys
import i3ipc
import threading

FIFO = '/tmp/statusbar_vpn'
EXIT_CMD = 'EXIT'

def work():
  try:
    print("VPN: â†º", end='', flush=True)
    print("VPN: {}".format(subprocess.run(['status-vpn'], capture_output=True).stdout.decode().rstrip()), end='', flush=True)
    while True:
      with open(FIFO) as pipe:
        data = pipe.read().rstrip()
        if data == EXIT_CMD:
          break
        print("VPN: {}".format(data), end='', flush=True)
  except Exception:
    pass

  if os.path.exists(FIFO):
    os.remove(FIFO)

def create_fifo():
  if os.path.exists(FIFO):
    os.remove(FIFO)

  try:
    os.mkfifo(FIFO)
  except OSError as oe:
    if oe.errno != errno.EEXIST:
      raise
create_fifo()

worker_thread = threading.Thread(target=work)
worker_thread.start()

def handler(signum, frame):
  if os.path.exists(FIFO):
    with open(FIFO, "w") as pipe:
      print(EXIT_CMD, file=pipe)
  worker_thread.join()
  sys.exit(0)

signal.signal(signal.SIGTERM, handler)
signal.signal(signal.SIGINT, handler)

i3 = i3ipc.Connection()
i3.on('shutdown', handler)
i3.main()
